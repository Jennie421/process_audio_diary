#!/bin/bash
#BSUB -J BLSPull
#BSUB -o /data/sbdp/logs/audio_diary/output-log-bls-pull-%J.out
#BSUB -e /data/sbdp/logs/audio_diary/error-log-bls-pull-%J.err

# Submit job as follows:
# ---
# bsub < trans_pull_queue.lsf
# ---

#BSUB -q normal
#BSUB -n 2
#BSUB -R rusage[mem=4000]

# SETTINGS TO CHANGE!
bash_home_path=/PHShome/me741/.bashrc # path to bashrc or bash_profile for current user
code_root=/PHShome/me741/process_audio_diary # path to the repository folder for current user
# make sure conda environment for process_audio is set up before running this!

# Some important variables to check (Can be removed later)
echo '---PROCESS RESOURCE LIMITS---'
ulimit -a
echo '---SHARED LIBRARY PATH---'
echo $LD_LIBRARY_PATH
echo '---APPLICATION SEARCH PATH:---'
echo $PATH
echo '---LSF Parameters:---'
printenv | grep '^LSF'
echo '---LSB Parameters:---'
printenv | grep '^LSB'
echo '---LOADED MODULES:---'
module list
echo '---SHELL:---'
echo $SHELL
echo '---HOSTNAME:---'
hostname
echo '---GROUP MEMBERSHIP (files are created in the first group listed):---'
groups
echo '---DEFAULT FILE PERMISSIONS (UMASK):---'
umask
echo '---CURRENT WORKING DIRECTORY:---'
pwd
echo '---DISK SPACE QUOTA---'
df .
echo '---TEMPORARY SCRATCH FOLDER ($TMPDIR):---'
echo $TMPDIR

source /etc/profile.d/modules.sh
source "$bash_home_path"
module load anaconda
source activate audio_process

if [[ ! -e ${code_root}/.passwords.sh ]]; then
	echo "no password available, so nothing to do"
	exit
fi

# since have password, source the file that will export the trancribeme_password
source "$code_root"/.passwords.sh
# in this instance likely just keeping study as BLS
study=BLS
export study

# let user know script is starting
echo ""
echo "Beginning script - phone transcript pull for:"
echo "$study"
echo ""

# add current time for runtime tracking purposes
now=$(date +"%T")
echo "Current time: ${now}"
echo ""

# only real step is the transcript pull
echo "Pulling transcripts"
bash "$code_root"/individual_modules/run_transcription_pull.sh
echo ""

# add current time for runtime tracking purposes
now=$(date +"%T")
echo "Current time: ${now}"
echo ""

echo "Script completed"
